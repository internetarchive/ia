# Prerequisites:
#     https://deno.land/manual/getting_started/installation
#     deno install -qAn vr https://deno.land/x/velociraptor/cli.ts

# Running examples (cd to any dir in this repo):
#   vr test
#
# Helpful info:
#   https://velociraptor.run/docs/vscode/
#   https://blog.logrocket.com/exploring-velociraptor-deno-npm-style-script-runner/

scripts:
  lint:
    - deno lint -c deno.json
    - vr eslint

  eslint-setup:
    - deno cache --unstable --node-modules-dir npm:eslint-config-airbnb-base@14.2.0  && echo>/dev/null
    - deno cache --unstable --node-modules-dir npm:eslint-plugin-compat              && echo>/dev/null
    - deno cache --unstable --node-modules-dir npm:eslint-plugin-import              && echo>/dev/null
    - deno cache --unstable --node-modules-dir npm:eslint-plugin-no-floating-promise && echo>/dev/null

  eslint:
    # We want to call either `eslint .` or `eslint [arg1] <arg2> ..`
    - echo . >| .testarg && echo >> .testarg
    # Next, two unusual things going on in..
    # Unfortunately right now running deno like this always exits 0, regardless.
    # Lint warnings/errors write to stdout -- so capture that to a file and check after if empty.
    # Wrap that with `script` command so the invoker will still see the useful colors in the output.
    - script -q .testout sh -c "deno run -A --unstable --node-modules-dir  npm:eslint@^7.32.0
        $(egrep . .testarg |tail -1) 2>/dev/null" &&  echo>/dev/null
    - rm .testarg; echo>/dev/null
    # .testout should be empty -- else a lint failure (remove any docker runtime start/stop logs)
    - egrep -v '^Script (started|done) on ' .testout |egrep . |sort -o .testout && echo>/dev/null
    - test ! -s .testout  &&  echo>/dev/null
    - rm -f .testout && echo>/dev/null

  test:
    - rm -rf coverage && echo>/dev/null
    - deno test -A --coverage=coverage --location=https://av.dev.archive.org --no-check
    - deno coverage coverage --exclude=no-exclusions --lcov >| coverage/lcov.lcov && echo >/dev/null
    - lcov --derive-func-data                               -l coverage/lcov.lcov && echo >/dev/null
